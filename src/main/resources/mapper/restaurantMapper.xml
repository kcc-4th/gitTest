<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kcc.springtest.domain.Restaurant.repository.mapper.RestaurantMapper">
    <resultMap id="restaurantMap" type="RestaurantResponse">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="address" column="address"/>
        <result property="created_at" column="created_at"/>
        <result property="updated_at" column="updated_at"/>
        <collection property="menus" resultMap="menuMap" column="menu_id" javaType="ArrayList"/>
    </resultMap>

    <resultMap id="menuMap" type="MenuResponse">
        <id property="id" column="menu_id"/>
        <result property="name" column="menu_name"/>
        <result property="price" column="menu_price"/>
        <result property="created_at" column="menu_created_at"/>
        <result property="updated_at" column="menu_updated_at"/>
    </resultMap>

    <insert id="saveRestaurant" parameterType="Restaurant">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select restaurant_seq.nextval from dual
        </selectKey>
        insert into restaurant(id, name, address, created_at, updated_at)
            values(${id}, #{name}, #{address}, systimestamp, systimestamp)
    </insert>

    <delete id="deleteRestaurant" parameterType="long">
        delete from restaurant where id = #{id}
    </delete>

    <update id="updateRestaurant" parameterType="Restaurant">
        update restaurant set name = #{name}, address = #{address}, updated_at = systimestamp
        where id = #{id}
    </update>

    <select id="findById" resultMap="restaurantMap" parameterType="long">
        select
            res.id as id, res.name as name, res.address as address,
            res.created_at as created_at, res.updated_at as updated_at,
            m.id as menu_id, m.name as menu_name, m.price as menu_price,
            m.created_at as menu_created_at, m.updated_at as menu_updated_at
        from restaurant res
        left join menu m on res.id = m.restaurant_id
        where res.id = #{id}
    </select>

    <select id="findAll" resultType="RestaurantListResponse">
        select
            res.id as id, res.name as name, res.address as address,
            res.created_at as createdAt, res.updated_at as updatedAt
        from restaurant res
    </select>
</mapper>